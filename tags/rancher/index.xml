<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rancher on Tom&#39;s Blog</title>
    <link>https://gagor.pl/tags/rancher/</link>
    <description>Recent content in Rancher on Tom&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Content licensed under &lt;a rel=&#34;license noopener noreferrer&#34; target=&#34;_blank&#34; href=&#34;http://creativecommons.org/licenses/by-sa/4.0/&#34;&gt;(CC BY-SA 4.0)&lt;/a&gt;
</copyright>
    <lastBuildDate>Tue, 06 Feb 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://gagor.pl/tags/rancher/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to run x86-64 Docker images on Apple&#39;s MacBook with M1/M2/M3 CPU</title>
      <link>https://gagor.pl/2024/02/how-to-run-x86-64-docker-images-on-apples-macbook-with-m1/m2/m3-cpu/</link>
      <pubDate>Tue, 06 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://gagor.pl/2024/02/how-to-run-x86-64-docker-images-on-apples-macbook-with-m1/m2/m3-cpu/</guid>
      <description>Working with Docker environments amid diverse architectures, like Apple&amp;rsquo;s arm64 and x86-64/AMD64, presents challenges. I&amp;rsquo;ve encountered the clash between my Mac&amp;rsquo;s M1 arm64 architecture and my x86-centric server workloads. The solution? Just use DOCKER_DEFAULT_PLATFORM 1 2.
Just run in the terminal:
Enforce platform for all commands export DOCKER_DEFAULT_PLATFORM=linux/amd64 With this command, Docker enforces x86 architecture by default on commands supporting --platform parameter, streamlining workflows and sparing the need for repetitive --platform specifications.</description>
    </item>
  </channel>
</rss>

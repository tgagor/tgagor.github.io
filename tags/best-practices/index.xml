<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Best practices on timor&#39;s site</title>
    <link>https://timor.site/tags/best-practices/</link>
    <description>Recent content in Best practices on timor&#39;s site</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Content licensed under &lt;a rel=&#34;license noopener noreferrer&#34; target=&#34;_blank&#34; href=&#34;http://creativecommons.org/licenses/by-sa/4.0/&#34;&gt;(CC BY-SA 4.0)&lt;/a&gt;
</copyright>
    <lastBuildDate>Sun, 11 Sep 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://timor.site/tags/best-practices/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Use .dockerignore</title>
      <link>https://timor.site/2022/09/use-dockerignore/</link>
      <pubDate>Sun, 11 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://timor.site/2022/09/use-dockerignore/</guid>
      <description>People often complain, that building Docker image takes a long time but they&amp;rsquo;re just adding single jar package. Really?
They often don&amp;rsquo;t remember that whole &amp;ldquo;build context&amp;rdquo;1 is uploaded to Docker daemon during build, which often means they&amp;rsquo;re not only adding &amp;ldquo;single jar&amp;rdquo;, but also all sources, test results and whatever you have in your context directory.
Solution is simple - use .dockerignore file2 dropped in the directory where you build the image.</description>
    </item>
    
    <item>
      <title>Dockerfile writing best practices</title>
      <link>https://timor.site/2022/09/dockerfile-writing-best-practices/</link>
      <pubDate>Sat, 10 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://timor.site/2022/09/dockerfile-writing-best-practices/</guid>
      <description>I&amp;rsquo;ve been thinking for a long time about writing set of articles on the topic of: &amp;ldquo;Dockerfile writing best practices&amp;rdquo;.
As it&amp;rsquo;s often my daily job to prepare best in class containers, that are later used by thousands of company&amp;rsquo;s applications, I have quite good insights on the topic. Some experience and knowledge gathered is often against intuition and building it took me a while. I want to share it, with a hope that feedback I get will allow me to excel on the topic even further.</description>
    </item>
    
  </channel>
</rss>

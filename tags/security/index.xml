<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Security on timor&#39;s site</title>
    <link>https://gagor.pl/tags/security/</link>
    <description>Recent content in Security on timor&#39;s site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Content licensed under &lt;a rel=&#34;license noopener noreferrer&#34; target=&#34;_blank&#34; href=&#34;http://creativecommons.org/licenses/by-sa/4.0/&#34;&gt;(CC BY-SA 4.0)&lt;/a&gt;
</copyright>
    <lastBuildDate>Mon, 22 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://gagor.pl/tags/security/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Creating fully encrypted ZFS pool</title>
      <link>https://gagor.pl/2021/11/creating-fully-encrypted-zfs-pool/</link>
      <pubDate>Mon, 22 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://gagor.pl/2021/11/creating-fully-encrypted-zfs-pool/</guid>
      <description>What I want to do? I use my pool to securely store backups, archive my old documents and keep huge family&amp;rsquo;s photo library.
I have new disks. They were tortured with badblocks, so they&amp;rsquo;re ready to create ZFS pool.
I&amp;rsquo;ve read few documents about different approaches 1 2 3. I wanted to be sure if anything changed during past years. One of articles recommends mirroring over RAIDZ. Resilvering is faster, at the same time putting IO less stress on whole pool.</description>
    </item>
    
    <item>
      <title>Bezpieczeństwo aplikacji webowych</title>
      <link>https://gagor.pl/books/2019/bezpieczenstwo-aplikacji-webowych/</link>
      <pubDate>Fri, 04 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://gagor.pl/books/2019/bezpieczenstwo-aplikacji-webowych/</guid>
      <description> Bezpieczeństwo aplikacji webowychAuthors: Michał Bentkowski, Gynvael Coldwind, Artur Czyż, Rafał Janicki, Jarosław Kamiński, Adrian Michalczyk, Mateusz Niezabitowski, Marcin Piosek, Michał Sajdak, Grzegorz Trawiński, Bohdan Widła
ksiazka.sekurak.pl </description>
    </item>
    
    <item>
      <title>DevOps</title>
      <link>https://gagor.pl/books/2019/devops-gene-kim/</link>
      <pubDate>Fri, 04 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://gagor.pl/books/2019/devops-gene-kim/</guid>
      <description> DevOpsŚwiatowej klasy zwinność, niezawodność i bezpieczeństwo w Twojej organizacji
Authors: Gene Kim, Patrick Debois, John Willis, Jez Humble, John Allspaw
helion.pl </description>
    </item>
    
    <item>
      <title>Broń matematycznej zagłady</title>
      <link>https://gagor.pl/books/2018/bron-matematycznej-zaglady/</link>
      <pubDate>Thu, 22 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://gagor.pl/books/2018/bron-matematycznej-zaglady/</guid>
      <description> Broń matematycznej zagładyJak algorytmy zwiększają nierówności i zagrażają demokracji
Author: Cathy O&amp;#39;Neil
helion.pl </description>
    </item>
    
    <item>
      <title>Cisza w sieci</title>
      <link>https://gagor.pl/books/2018/cisza-w-sieci/</link>
      <pubDate>Fri, 23 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://gagor.pl/books/2018/cisza-w-sieci/</guid>
      <description> Cisza w sieciAuthor: Michał Zalewski
helion.pl </description>
    </item>
    
    <item>
      <title>Black Hat Python</title>
      <link>https://gagor.pl/books/2017/black-hack-python/</link>
      <pubDate>Mon, 22 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://gagor.pl/books/2017/black-hack-python/</guid>
      <description> Black Hat PythonJęzyk Python dla hakerów i pentesterów
Author: Justin Seitz
amazon.plhelion.pl </description>
    </item>
    
    <item>
      <title>Sztuka podstępu</title>
      <link>https://gagor.pl/books/2016/sztuka-podstepu/</link>
      <pubDate>Wed, 10 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>https://gagor.pl/books/2016/sztuka-podstepu/</guid>
      <description> Sztuka podstępuŁamałem ludzi, nie hasła
Authors: Kevin Mitnick, William L. Simon
helion.pl </description>
    </item>
    
    <item>
      <title>Prepare for DoS like Cloudflare do</title>
      <link>https://gagor.pl/2016/02/prepare-for-dos-like-cloudflare-do/</link>
      <pubDate>Fri, 05 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>https://gagor.pl/2016/02/prepare-for-dos-like-cloudflare-do/</guid>
      <description>I watched nice presentation about how Cloudflare protects itself against DoS. Most of us are not able to do that exactly like them but some of tips were general enough to be used on typical web front server.
I took notes from this presentation and presented here. Thanks to Marek agreement I also reposted all examples (in easier to copy paste way).
Howto prepare against ACK/FIN/RST/X-mas flood Use conntrack rule:</description>
    </item>
    
    <item>
      <title>Let’s Encrypt - without auto configuration</title>
      <link>https://gagor.pl/2016/01/lets-encrypt-without-auto-configuration/</link>
      <pubDate>Mon, 04 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://gagor.pl/2016/01/lets-encrypt-without-auto-configuration/</guid>
      <description>From the first moment I heard about Let&amp;rsquo;s Encrypt I liked it and wanted to use it as fast as possible. But the more I read how they want to implement it, the more I dislike it.
Current project with automatic configuration is not what I want to use at all. I have many very complicated configs and I do not trust such tools enough to use them. I like UNIX&amp;rsquo;s single purpose principle, tools should do one thing and do it well - nothing more.</description>
    </item>
    
    <item>
      <title>Splątana sieć</title>
      <link>https://gagor.pl/books/2015/splatana-siec/</link>
      <pubDate>Thu, 10 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://gagor.pl/books/2015/splatana-siec/</guid>
      <description> Splątana siećPrzewodnik po bezpieczeństwie nowoczesnych aplikacji WWW
Author: Michał Zalewski
helion.pl </description>
    </item>
    
    <item>
      <title>Generate ECDSA key with OpenSSL</title>
      <link>https://gagor.pl/2013/12/generate-ecdsa-key-with-openssl/</link>
      <pubDate>Tue, 17 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>https://gagor.pl/2013/12/generate-ecdsa-key-with-openssl/</guid>
      <description>After the last NSA scandal I&amp;rsquo;ve found some time to read some texts about PFS and ECDSA keys lately. I always used RSA keys but wanted to give a try to ECDSA so I wanted to give it a try (test performance, etc). Here is how I&amp;rsquo;ve done it.
Firstly find your favorite curve. A short tip about bit length and complexity could be found here. From it you will now that using 256 bit ECDSA key should be enough for next 10-20 years.</description>
    </item>
    
    <item>
      <title>Running Apache with mod_spdy and PHP-FPM</title>
      <link>https://gagor.pl/2013/12/running-apache-with-mod_spdy-and-php-fpm/</link>
      <pubDate>Mon, 16 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>https://gagor.pl/2013/12/running-apache-with-mod_spdy-and-php-fpm/</guid>
      <description>SPDY is new protocol proposed by Google as an alternative for HTTP(S). Currently Chrome and Firefox browsers are using it as default if available on server. It is faster in most cases by few to several percent. The side effect of using mod_spdy is that it&amp;rsquo;s working well only with thread safe Apache&amp;rsquo;s modules. PHP module for Apache is not thread safe so we need to use PHP as CGI or FastCGI service.</description>
    </item>
    
    <item>
      <title>Fortigate - VPN IPSec PSK XAuth z Android’a 4.x</title>
      <link>https://gagor.pl/2013/03/fortigate-vpn-ipsec-psk-xauth-z-androida-4-x/</link>
      <pubDate>Sat, 30 Mar 2013 00:00:00 +0000</pubDate>
      
      <guid>https://gagor.pl/2013/03/fortigate-vpn-ipsec-psk-xauth-z-androida-4-x/</guid>
      <description>Do niedawna na moim telefonie VPN&amp;rsquo;ami były: PPTP lub L2TP - oba niespecjalnie mi się podobały. Ale od wersji 4-tej pojawiły się dwa nowe tryby: IPSec Xauth PSK i IPSec Xauth RSA. W pierwszym autoryzacja wykorzystuje login i hasło, w drugim certyfikaty.
Tryb IPSec Xauth PSK jest bardzo wygodny bo łatwo można połączyć go z zewnętrznymi mechanizmami uwierzytelniającymi np. LDAP, Active Directory, itp.
Pokażę jak skonfigurować swojego Fortigate&amp;rsquo;a by umożliwić połączenie z telefonów i tabletów na Androidzie 4.</description>
    </item>
    
    <item>
      <title>Nginx - hide server version and name in Server header and error pages</title>
      <link>https://gagor.pl/2013/01/nginx-hide-server-version-and-name-in-server-header-and-error-pages/</link>
      <pubDate>Thu, 24 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>https://gagor.pl/2013/01/nginx-hide-server-version-and-name-in-server-header-and-error-pages/</guid>
      <description>On Debian you have to install nginx-extras package (because it have built in headers_more module). Then you need two options (best in global configuration /etc/nginx/nginx.conf file, http part):
server_tokens off; more_set_headers &amp;#39;Server: BadAss&amp;#39;; And it&amp;rsquo;s good to setup non standard error pages on every site (500 and 404 at minimum):
error_page 403 404 http://mysite.com/areyoulost; error_page 502 503 504 /500.html; </description>
    </item>
    
    <item>
      <title>Apache: ograniczenie dostępu dla zalogowanych użytkowników z mod_rewrite i mod_auth_basic</title>
      <link>https://gagor.pl/2012/09/apache-ograniczenie-dostepu-dla-zalogowanych-uzytkownikow-z-mod_rewrite-i-mod_auth_basic/</link>
      <pubDate>Sun, 09 Sep 2012 00:00:00 +0000</pubDate>
      
      <guid>https://gagor.pl/2012/09/apache-ograniczenie-dostepu-dla-zalogowanych-uzytkownikow-z-mod_rewrite-i-mod_auth_basic/</guid>
      <description>Niedawno trafiłem na ciekawy problem w mod_rewrite - by przekierowywać użytkowników logujących się jednym z modułów mod_auth_basic do dedykowanych im katalogów, równocześnie blokując dostęp do katalogów innych użytkowników. Nie brzmi to jakoś strasznie ale problem okazał się być całkiem nietrywialnym. Teoretyczne rozwiązanie sprowadzało się do wyszukania loginu użytkownika ze ścieżki URI i porównania z nazwą użytkownika ze zmiennej %{REMOTE_USER} - jeśli wartości się różnią to Forbidden. Ale szybko okazało się że w RewriteCond zmienne z dopasowań można podstawiać tylko w pierwszym parametrze i że o ile można RewriteCond&amp;rsquo;y połączyć wyrażeniami logicznymi typu AND/OR to nie ma możliwości porównania czy dopasowania z kolejnych RewriteCond&amp;rsquo;ów są identyczne.</description>
    </item>
    
    <item>
      <title>fail2ban - regułki dla dovecot’a</title>
      <link>https://gagor.pl/2011/11/fail2ban-regulki-dla-dovecota/</link>
      <pubDate>Mon, 28 Nov 2011 00:00:00 +0000</pubDate>
      
      <guid>https://gagor.pl/2011/11/fail2ban-regulki-dla-dovecota/</guid>
      <description>Domyślna konfiguracja fail2ban&amp;rsquo;a (na Debianie) nie zawiera reguł pozwalających na blokowanie prób włamań na skrzynki POP/IMAP dla dovecota (no chyba że korzystamy z saslauthd). Można szybko utworzyć własny zestaw filtrów co przedstawię poniżej.
Tworzymy plik: /etc/fail2ban/filter.d/dovecot.conf
[Definition] failregex = (?: pop3-login|imap-login): .*(?:Authentication failure|Aborted login \(auth failed|Aborted login \(tried to use disabled|Disconnected \(auth failed|Aborted login \(\d+ authentication attempts).*rip=(?P&amp;lt;host&amp;gt;\S*),.* ignoreregex = Później dopisujemy na końcu pliku: /etc/fail2ban/jail.conf
[dovecot] enabled = true filter = dovecot port = pop3,pop3s,imap,imaps logpath = /var/log/mail.</description>
    </item>
    
    <item>
      <title>Ochrona usług przed atakami brute force z fail2ban’em</title>
      <link>https://gagor.pl/2011/10/ochrona-uslug-przed-atakami-brute-force-z-fail2banem/</link>
      <pubDate>Mon, 03 Oct 2011 00:00:00 +0000</pubDate>
      
      <guid>https://gagor.pl/2011/10/ochrona-uslug-przed-atakami-brute-force-z-fail2banem/</guid>
      <description>Bardzo często konfigurując usługi dostępne publicznie poświęca się sporo czasu na maksymalne zwiększenie bezpieczeństwa przez &amp;ldquo;dopieszczanie&amp;rdquo; konfiguracji (certyfikaty z mocnym szyfrowaniem, ochronę pewnych stron hasłem, dostęp do SSH tylko kluczami, itd.) ale całkowicie pomija się przygotowanie systemu aktywnie monitorującego błędne próby autoryzacji. Oczywiście nie można umniejszać wagi pierwszego z wymienionych etapów ale zdecydowanie nie powinno pomijać się też tego drugiego. Przecież każdy admin chciałby wiedzieć gdy ktoś próbuje włamać się na jego serwer (FTP, HTTP, SSH, itp.</description>
    </item>
    
    <item>
      <title>Zabezpieczenie Apachego na Debianie przed slowloris’em</title>
      <link>https://gagor.pl/2011/09/zabezpieczenie-apachego-na-debianie-przed-slowlorisem/</link>
      <pubDate>Mon, 12 Sep 2011 00:00:00 +0000</pubDate>
      
      <guid>https://gagor.pl/2011/09/zabezpieczenie-apachego-na-debianie-przed-slowlorisem/</guid>
      <description>Od jakiegoś czasu dostępny jest w sieci skrypt slowloris.pl pozwalający z pojedynczego komputera wykonać atak DOS na zdalny serwer WWW. Atak polega na uruchomieniu wielu równoczesnych sesji i bardzo wolnym wysyłaniu komunikatów HTTP. Atakujący udaje &amp;ldquo;klienta z wolnym łączem&amp;rdquo; równocześnie uruchamiając kolejne sesje by po pewnym czasie zająć wszystkie dostępne. Serwer WWW przestaje wtedy odpowiadać na zapytania od innych klientów. Dodatkowo na źle wyskalowanych serwerach duża liczba procesów Apachego może spowodować swapowanie i błędy braku pamięci.</description>
    </item>
    
    <item>
      <title>Bezpieczeństwo sieci</title>
      <link>https://gagor.pl/books/2007/bezpieczenstwo-sieci/</link>
      <pubDate>Sat, 10 Feb 2007 00:00:00 +0000</pubDate>
      
      <guid>https://gagor.pl/books/2007/bezpieczenstwo-sieci/</guid>
      <description> Bezpieczeństwo sieciNarzędzia
Authors: Nitesh Dhanjani, Justin Clarke
helion.pl </description>
    </item>
    
  </channel>
</rss>
